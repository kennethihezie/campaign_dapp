/* Core */
import { createSlice } from '@reduxjs/toolkit'

/* Instruments */
import { fetchContractsAsync } from './thunks'
import { ContractState } from './state'

const initialState: ContractState = {
  contracts: [],
  status: false,
}

export const contractsSlice = createSlice({
  name: 'contracts',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchContractsAsync.pending, (state) => {
        state.status = true
      })
      .addCase(fetchContractsAsync.fulfilled, (state, action) => {
        state.status = false
        state.contracts = action.payload
      })
  },
})
